//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/ThirdBallControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ThirdBallControl : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ThirdBallControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ThirdBallControl"",
    ""maps"": [
        {
            ""name"": ""ThirdBallControlMap"",
            ""id"": ""fd540b06-4058-4750-951d-1d04563a6738"",
            ""actions"": [
                {
                    ""name"": ""BallMove"",
                    ""type"": ""Value"",
                    ""id"": ""263d72c5-af95-476c-a87a-12940b6f1373"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraMove"",
                    ""type"": ""Value"",
                    ""id"": ""800dff99-76a1-46b8-b3f9-4012adfb601e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BallJump"",
                    ""type"": ""Button"",
                    ""id"": ""9d0880dc-4bbc-4b67-a4c5-db737bbcb06c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASDKeys"",
                    ""id"": ""95ca6399-3914-4b38-bd04-87fe36e9aee3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BallMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ed7045f7-3c24-4745-a5e6-4597607bc4a0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BallMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ba4083e2-8303-424d-97d9-36eadd1675e9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BallMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""76b309dc-9b7b-4bb8-ac10-97949a4b50f6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BallMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""826c9903-bd3c-4233-ad7a-a455cc8bc06d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BallMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ArrowKeys"",
                    ""id"": ""993a3ca7-d377-4fd4-beec-e241364a4420"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BallMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""44a8f93a-d496-49cc-aa94-f55950735dde"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BallMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a686b367-46fb-4d6a-a0ef-5d9c44023bdc"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BallMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f5cc4a0c-dc6b-49f2-8e01-fdc5fd9f44cf"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BallMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""16b7ea07-417d-48d3-9a12-73ceb2e41f47"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BallMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9bd7672b-8e93-45cd-9801-a841f8326665"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26255712-5430-492f-8294-7ff510939f1e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""BallJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard and Mouse"",
            ""bindingGroup"": ""Keyboard and Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // ThirdBallControlMap
        m_ThirdBallControlMap = asset.FindActionMap("ThirdBallControlMap", throwIfNotFound: true);
        m_ThirdBallControlMap_BallMove = m_ThirdBallControlMap.FindAction("BallMove", throwIfNotFound: true);
        m_ThirdBallControlMap_CameraMove = m_ThirdBallControlMap.FindAction("CameraMove", throwIfNotFound: true);
        m_ThirdBallControlMap_BallJump = m_ThirdBallControlMap.FindAction("BallJump", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ThirdBallControlMap
    private readonly InputActionMap m_ThirdBallControlMap;
    private IThirdBallControlMapActions m_ThirdBallControlMapActionsCallbackInterface;
    private readonly InputAction m_ThirdBallControlMap_BallMove;
    private readonly InputAction m_ThirdBallControlMap_CameraMove;
    private readonly InputAction m_ThirdBallControlMap_BallJump;
    public struct ThirdBallControlMapActions
    {
        private @ThirdBallControl m_Wrapper;
        public ThirdBallControlMapActions(@ThirdBallControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @BallMove => m_Wrapper.m_ThirdBallControlMap_BallMove;
        public InputAction @CameraMove => m_Wrapper.m_ThirdBallControlMap_CameraMove;
        public InputAction @BallJump => m_Wrapper.m_ThirdBallControlMap_BallJump;
        public InputActionMap Get() { return m_Wrapper.m_ThirdBallControlMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ThirdBallControlMapActions set) { return set.Get(); }
        public void SetCallbacks(IThirdBallControlMapActions instance)
        {
            if (m_Wrapper.m_ThirdBallControlMapActionsCallbackInterface != null)
            {
                @BallMove.started -= m_Wrapper.m_ThirdBallControlMapActionsCallbackInterface.OnBallMove;
                @BallMove.performed -= m_Wrapper.m_ThirdBallControlMapActionsCallbackInterface.OnBallMove;
                @BallMove.canceled -= m_Wrapper.m_ThirdBallControlMapActionsCallbackInterface.OnBallMove;
                @CameraMove.started -= m_Wrapper.m_ThirdBallControlMapActionsCallbackInterface.OnCameraMove;
                @CameraMove.performed -= m_Wrapper.m_ThirdBallControlMapActionsCallbackInterface.OnCameraMove;
                @CameraMove.canceled -= m_Wrapper.m_ThirdBallControlMapActionsCallbackInterface.OnCameraMove;
                @BallJump.started -= m_Wrapper.m_ThirdBallControlMapActionsCallbackInterface.OnBallJump;
                @BallJump.performed -= m_Wrapper.m_ThirdBallControlMapActionsCallbackInterface.OnBallJump;
                @BallJump.canceled -= m_Wrapper.m_ThirdBallControlMapActionsCallbackInterface.OnBallJump;
            }
            m_Wrapper.m_ThirdBallControlMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @BallMove.started += instance.OnBallMove;
                @BallMove.performed += instance.OnBallMove;
                @BallMove.canceled += instance.OnBallMove;
                @CameraMove.started += instance.OnCameraMove;
                @CameraMove.performed += instance.OnCameraMove;
                @CameraMove.canceled += instance.OnCameraMove;
                @BallJump.started += instance.OnBallJump;
                @BallJump.performed += instance.OnBallJump;
                @BallJump.canceled += instance.OnBallJump;
            }
        }
    }
    public ThirdBallControlMapActions @ThirdBallControlMap => new ThirdBallControlMapActions(this);
    private int m_KeyboardandMouseSchemeIndex = -1;
    public InputControlScheme KeyboardandMouseScheme
    {
        get
        {
            if (m_KeyboardandMouseSchemeIndex == -1) m_KeyboardandMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard and Mouse");
            return asset.controlSchemes[m_KeyboardandMouseSchemeIndex];
        }
    }
    public interface IThirdBallControlMapActions
    {
        void OnBallMove(InputAction.CallbackContext context);
        void OnCameraMove(InputAction.CallbackContext context);
        void OnBallJump(InputAction.CallbackContext context);
    }
}
